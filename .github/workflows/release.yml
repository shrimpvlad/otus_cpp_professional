name: 'C++ CI'

on:
  push:
    branches:
      - main
      - feature/github_actions
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        builds:
          - directory: 01_helloWorld
            file_name: helloworld
          - directory: 02_ipFilter
            file_name: ip_filter
          - directory: 04_ipTemplates
            file_name: print_ip
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install cmake libgtest-dev -y
      - name: Build Project
        run: |
          for build in "${{ matrix.builds }}"; do
            dir=$(echo "$build" | jq -r '.directory')
            file=$(echo "$build" | jq -r '.file_name')
            echo "Building $dir directory"
            cmake -B $dir/build -S $dir -D BUILD_NUMBER=${{ github.run_number }} -D FILE_NAME=$file
            ls -la $dir/build # Выводим содержимое директории сборки
            cmake --build $dir/build
            cmake --build $dir/build --target test
            ls -la $dir/build # Выводим содержимое директории сборки
            cmake --build $dir/build --target package
          done
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ matrix.builds.file_name }}-${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/${{ matrix.builds.directory }}/build/${{ matrix.builds.file_name }}-0.0.${{ github.run_number }}-Linux.deb
          asset_name: ${{ matrix.builds.file_name }}-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package
