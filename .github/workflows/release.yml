name: 'C++ CI'

on:
  push:
    branches:
      - main
      - feature/github_actions
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory:
          - helloworld
          - ip_filter
          # - allocator
          - print_ip
    permissions: write-all
    env:
      PROJECT_NAME: ${{ matrix.directory }} # Устанавливаем PROJECT_NAME для всех директорий
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: sudo apt-get update && sudo apt-get install cmake libgtest-dev -y
        working-directory: ${{ matrix.directory }}
      - name: Build ${{ matrix.directory }} directory
        run: |
          for dir in "${{ matrix.directory }}"; do
            echo "Building $dir directory"
            cmake -B $dir/build -S $dir -D BUILD_NUMBER=${{ github.run_number }}
            ls -la $dir/build # Выводим содержимое директории сборки
            cmake --build $dir/build
            cmake --build $dir/build --target test
            ls -la $dir/build # Выводим содержимое директории сборки
            cmake --build $dir/build --target package
          done
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.PROJECT_NAME }}-${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/${{ matrix.directory }}/build/${{ env.PROJECT_NAME }}-0.0.${{ github.run_number }}-Linux.deb
          asset_name: ${{ env.PROJECT_NAME }}-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package
